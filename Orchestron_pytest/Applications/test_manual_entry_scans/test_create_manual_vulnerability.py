from pytest import mark
from Applications.test_manual_entry_scans.manual_entry import *
from Applications.test_create_applications.create_app import *
from Applications.test_delete_application.delete_app import *


@mark.create_manual_vul
class EnterManualVulnerableTests:
    """
    This Testcase lets us test if manual vulnerability can be created and asserts the success message. (Basic workflow)
    """
    def test_create_app(self, driver):
        wait = WebDriverWait(driver, 20, poll_frequency=2, ignored_exceptions=[
            NoSuchElementException, ElementNotVisibleException, ElementClickInterceptedException])

        create_apps(driver, application_name="Manual vul app", url="http://demo.com")

        WebDriverWait(driver, 10).until(EC.invisibility_of_element((By.XPATH, "//div[@class='loading-background']")))
        success_msg = wait.until(EC.visibility_of_element_located((By.XPATH, success_msg_for_app_created)))
        assert success_msg.text == "Application has been created successfully!"
        wait.until(EC.invisibility_of_element((By.XPATH, success_msg_for_app_created)))

    def test_manual_entry(self, driver):
        wait = WebDriverWait(driver, 20, poll_frequency=2, ignored_exceptions=[
            NoSuchElementException, ElementNotVisibleException, ElementClickInterceptedException])

        create_manual_vul(driver, individual_app_xpath="//label[contains(text(), 'Manual vul app')]",
                          scan_name="SQL manual", Severity="High", cwe_num="89:Sql", Descrption="This is manual vul")
        wait.until(EC.visibility_of_element_located((By.XPATH, success_msg_for_manual_vul_creation)))
        wait.until(EC.invisibility_of_element_located((By.XPATH, success_msg_for_manual_vul_creation)))

    def test_delete_app(self, driver):
        delete_app(driver, application="//label[contains(text(), 'Manual vul app')]")
